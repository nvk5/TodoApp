{"version":3,"sources":["redux/reducer.js","redux/store.js","components/Error/index.js","components/Error/Error.js","components/ErrorBoundry/index.js","components/ErrorBoundry/ErrorBoundry.js","components/TodoColorTheme/TodoColorTheme.js","redux/actions.js","components/TodoColorTheme/index.js","components/TodoFilters/TodoFilters.js","components/TodoFilters/index.js","components/NewTodo/NewTodo.js","components/NewTodo/index.js","components/TodoActionButtons/index.js","components/TodoActionButtons/TodoActionButtons.js","components/TodoListField/TodoListField.js","components/TodoListField/index.js","components/TodoListItem/TodoListItem.js","components/TodoListItem/index.js","components/TodoArchieveButtons/TodoArchieveButtons.js","components/TodoArchieveButtons/index.js","components/TodoList/index.js","components/TodoList/TodoList.js","components/App/index.js","components/App/App.js","index.js"],"names":["createInitialTodos","todos","map","todo","value","all","active","completed","editable","favourite","archieve","id","uuid","initialState","todoText","isValid","filter","colorTheme","reducer","state","action","type","newTodo","completedTodoIndex","findIndex","item","completedId","completedTodoElem","completedTodo","slice","editableTodoIndex","editableId","editableTodoElem","newEditableTodo","editedTodoIndex","editedId","editedTodoElem","editedTodo","editedValue","editDoneIndex","editDoneId","editDoneElem","editDoneTodo","favouriteTodoIndex","favouriteId","favouriteTodoElem","favouriteTodo","deletedIndex","deletedId","deletedElem","newDeletedElem","restoreConfig","isChecked","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","Error","className","ErrorBoundry","error","this","setState","props","children","React","Component","mapDispatchToProps","toggleColorScheme","TodoColorTheme","connect","onChange","event","target","checked","onFilterTodos","TodoFilters","todoFilter","index","mainFilter","isActive","counter","length","onClick","createTodo","addTodo","NewTodo","todoInput","useRef","useEffect","current","focus","ref","placeholder","TodoActionButtons","color","icon","title","handler","disabled","onEdit","onEditDone","TodoListField","newRef","completedTodoClass","onBlur","onKeyDown","key","readOnly","markAsCompleted","markAsEditable","onDelete","onToggleFavourites","TodoListItem","role","onCleanArchieve","onRestoreArchieve","TodoArchieveButtons","TodoList","App","document","body","classList","remove","add","ReactDOM","render","getElementById"],"mappings":"uVAIMA,EAAqB,SAACC,GACxB,OAAOA,EAAMC,KAAI,SAAAC,GACb,MAAO,CACHC,MAAOD,EACPE,KAAK,EACLC,QAAQ,EACRC,WAAW,EACXC,UAAU,EACVC,WAAW,EACXC,UAAU,EACVC,GAAIC,WAKVC,EAAe,CACjBC,SAAU,GACVC,SAAS,EACTZ,KAAK,YAAKH,EApBO,CAAC,cAAe,cAAe,kBAqBhDgB,OAAQ,MACRN,SAAU,GACVO,WAAY,SAwHDC,EArHC,WAAmC,IAAlCC,EAAiC,uDAAzBN,EAAcO,EAAW,uCAC9C,OAAQA,EAAOC,MACX,IAAK,cACD,IAAMP,EAAWM,EAAON,SACxB,OAAO,2BAAKK,GAAZ,IAAmBL,WAAUC,SAAS,IAE1C,IAAK,WACD,IAAMO,EAAUtB,EAAmB,CAACoB,EAAON,WAE3C,OAAKM,EAAON,SAIL,2BAAKK,GAAZ,IAAmBJ,SAAS,EAAMD,SAAU,GAAIX,KAAK,GAAD,mBAAMgB,EAAMhB,MAAZ,YAAqBmB,IAAUN,OAAQ,QAHhF,2BAAKG,GAAZ,IAAmBJ,SAAS,IAKpC,IAAK,oBACD,IAAMQ,EAAqBJ,EAAMhB,KAAKqB,WAAU,SAAAC,GAAI,OAAIA,EAAKd,KAAOS,EAAOM,eACrEC,EAAoBR,EAAMhB,KAAKoB,GAC/BK,EAAa,2BACZD,GADY,IAEfrB,QAASqB,EAAkBrB,OAC3BE,UAAU,EACVD,WAAYoB,EAAkBpB,YAGlC,OAAO,2BACAY,GADP,IAEIhB,KAAK,GAAD,mBAAMgB,EAAMhB,KAAK0B,MAAM,EAAGN,IAA1B,CAA+CK,GAA/C,YAAiET,EAAMhB,KAAK0B,MAAMN,EAAqB,OAGnH,IAAK,mBACD,IAAMO,EAAoBX,EAAMhB,KAAKqB,WAAU,SAAAC,GAAI,OAAIA,EAAKd,KAAOS,EAAOW,cACpEC,EAAmBb,EAAMhB,KAAK2B,GAC9BG,EAAe,2BAAOD,GAAP,IAAyBxB,UAAWwB,EAAiBxB,WAE1E,OAAO,2BACAW,GADP,IAEIhB,KAAK,GAAD,mBAAMgB,EAAMhB,KAAK0B,MAAM,EAAGC,IAA1B,CAA8CG,GAA9C,YAAkEd,EAAMhB,KAAK0B,MAAMC,EAAoB,OAGnH,IAAK,YACD,IAAMI,EAAkBf,EAAMhB,KAAKqB,WAAU,SAAAC,GAAI,OAAIA,EAAKd,KAAOS,EAAOe,YAClEC,EAAiBjB,EAAMhB,KAAK+B,GAC5BG,EAAU,2BAAOD,GAAP,IAAuBhC,MAAOgB,EAAOkB,cAErD,OAAO,2BACAnB,GADP,IAEIhB,KAAK,GAAD,mBAAMgB,EAAMhB,KAAK0B,MAAM,EAAGK,IAA1B,CAA4CG,GAA5C,YAA2DlB,EAAMhB,KAAK0B,MAAMK,EAAkB,OAG1G,IAAK,YACD,IAAMK,EAAgBpB,EAAMhB,KAAKqB,WAAU,SAAAC,GAAI,OAAIA,EAAKd,KAAOS,EAAOoB,cAChEC,EAAetB,EAAMhB,KAAKoC,GAC1BG,EAAY,2BAAOD,GAAP,IAAqBjC,UAAU,IAEjD,OAAO,2BACAW,GADP,IAEIhB,KAAK,GAAD,mBAAMgB,EAAMhB,KAAK0B,MAAM,EAAGU,IAA1B,CAA0CG,GAA1C,YAA2DvB,EAAMhB,KAAK0B,MAAMU,EAAgB,OAGxG,IAAK,iBACD,IAAMI,EAAqBxB,EAAMhB,KAAKqB,WAAU,SAAAC,GAAI,OAAIA,EAAKd,KAAOS,EAAOwB,eACrEC,EAAoB1B,EAAMhB,KAAKwC,GAC/BG,EAAa,2BAAOD,GAAP,IAA0BpC,WAAYoC,EAAkBpC,YAE3E,OAAO,2BACAU,GADP,IAEIhB,KAAK,GAAD,mBAAMgB,EAAMhB,KAAK0B,MAAM,EAAGc,IAA1B,CAA+CG,GAA/C,YAAiE3B,EAAMhB,KAAK0B,MAAMc,EAAqB,OAGnH,IAAK,cACD,IAAMI,EAAe5B,EAAMhB,KAAKqB,WAAU,SAAAC,GAAI,OAAIA,EAAKd,KAAOS,EAAO4B,aAC/DC,EAAc9B,EAAMhB,KAAK4C,GACzBG,EAAc,2BAAOD,GAAP,IAAoB3C,QAAQ,EAAOI,UAAU,IAEjE,OAAO,2BACAS,GADP,IAEIT,SAAS,GAAD,mBAAMS,EAAMT,UAAZ,CAAsBwC,IAC9B/C,KAAK,GAAD,mBACGgB,EAAMhB,KAAK0B,MAAM,EAAGkB,IADvB,YAEG5B,EAAMhB,KAAK0B,MAAMkB,EAAe,OAI/C,IAAK,eACD,IAAM/B,EAASI,EAAOJ,OAEtB,OAAO,2BAAKG,GAAZ,IAAmBH,WAEvB,IAAK,iBACD,OAAO,2BAAKG,GAAZ,IAAmBT,SAAU,KAEjC,IAAK,mBACD,IAAMA,EAAWU,EAAOV,SAClByC,EAAgBzC,EAASR,KAAI,SAAAuB,GAAI,kCAAUA,GAAV,IAAgBnB,QAAQ,EAAMI,UAAU,OAE/E,OAAO,2BAAKS,GAAZ,IAAmBhB,KAAK,GAAD,mBAAMgB,EAAMhB,MAAZ,YAAqBgD,IAAgBnC,OAAQ,MAAON,SAAU,KAEzF,IAAK,cACD,IAAM0C,EAAYhC,EAAOgC,UAEzB,OAAIA,EACO,2BACAjC,GADP,IAEIF,WAAY,SAIb,2BACAE,GADP,IAEIF,WAAY,UAEpB,QACI,OAAOE,ICrIJkC,EALDC,YACVpC,EACAqC,OAAOC,8BAAgCD,OAAOC,gC,wCCJnCC,ECCD,kBACV,qBAAKC,UAAU,QAAf,mCCFWC,E,4MCGXxC,MAAQ,CACJyC,OAAO,G,kEAIPC,KAAKC,SAAS,CAACF,OAAO,M,+BAItB,OAAIC,KAAK1C,MAAMyC,MACJ,cAAC,EAAD,IAGJC,KAAKE,MAAMC,a,GAdgBC,IAAMC,WCQ1CC,G,MAAqB,CACvBC,kBCUsB,SAAAhB,GAAS,MAAK,CAAE/B,KAAM,cAAe+B,gBCrBhDiB,EFcAC,YAAQ,KAAMH,EAAdG,EAVQ,SAAC,GAAD,IAAEF,EAAF,EAAEA,kBAAF,OACnB,qBAAKV,UAAU,0CAAf,SACI,uBAAOa,SAAU,SAACC,GAAD,OAAWJ,EAAkBI,EAAMC,OAAOC,UAAUhB,UAAU,2CAA2CrC,KAAK,WAAWV,GAAG,gCG6B/IwD,EAAqB,CAAEQ,cFpBP,SAAA3D,GAAM,MAAK,CAAEK,KAAM,eAAgBL,YGf1C4D,EDqCAN,aAJS,SAAC,GAAD,MAAiC,CAAEnE,KAAnC,EAAGA,KAAsCa,OAAzC,EAASA,OAAwCN,SAAjD,EAAiBA,YAIDyD,EAAzBG,EAjCK,SAAC,GAA+C,IAA7CK,EAA4C,EAA5CA,cAAexE,EAA6B,EAA7BA,KAAMa,EAAuB,EAAvBA,OAAQN,EAAe,EAAfA,SAGhD,OACI,qCACI,oBAAIgD,UAAU,qCAAd,qBACA,qBAAKA,UAAU,kBAAf,SALY,CAAC,MAAO,SAAU,YAAa,YAAa,YAMvCxD,KAAI,SAAC2E,EAAYC,GAC1B,IAAMC,EAAa5E,EAAKa,QAAO,SAAAS,GAAI,OAAIA,EAAKoD,MACtCG,EAAWH,IAAe7D,EAAS,SAAW,GAC9CiE,EAAyB,aAAfJ,EAA4BnE,EAASwE,OAASH,EAAWG,OAEzE,OACI,yBAEI7D,KAAK,SACL8D,QAAS,kBAAMR,EAAcE,IAC7BnB,UAAS,gGAA2FsB,GAJxG,UAKKH,EACD,sBAAMnB,UAAU,6BAAhB,SAA8CuB,MALzCH,QAUrB,cAAC,EAAD,UEKNX,G,MAAqB,CAAEiB,WJlCV,SAAAtE,GAAQ,MAAK,CAAEO,KAAM,cAAeP,aIkCduE,QJhCzB,SAAAvE,GAAQ,MAAK,CAAEO,KAAM,WAAYP,eKDlCwE,EDmCAhB,aAJS,SAAC,GAAD,MAA4B,CAAExD,SAA9B,EAAGA,SAAqCC,QAAxC,EAAaA,WAIGoD,EAAzBG,EA/BC,SAAC,GAAgD,IAA9CxD,EAA6C,EAA7CA,SAAUsE,EAAmC,EAAnCA,WAAYC,EAAuB,EAAvBA,QAAStE,EAAc,EAAdA,QAExCwE,EAAYC,iBAAO,MAIzB,OAFAC,qBAAU,kBAAMF,EAAUG,QAAQC,UAAS,CAAC7E,IAGxC,sBAAK4C,UAAU,mBAAf,UACI,uBACIkC,IAAKL,EACLlE,KAAK,OACLqC,UAAU,eACVmC,YAAY,yBACZzF,MAAOU,EACPyD,SAAU,SAACC,GAAD,OAAWY,EAAWZ,EAAMC,OAAOrE,UAEjD,wBACIsD,UAAU,0BACVrC,KAAK,SACL8D,QAAS,kBAAME,EAAQvE,IAH3B,sBAMA,qBAAK4C,UAAW3C,EAAU,kBAAoB,uBAA9C,mCE1BG+E,G,MCgBAxB,aAFS,SAAC,GAAD,MAAiB,CAAEtD,OAAnB,EAAGA,UAEZsD,EAbW,SAAC,GAAD,IAAGtD,EAAH,EAAGA,OAAQ+E,EAAX,EAAWA,MAAOC,EAAlB,EAAkBA,KAAMC,EAAxB,EAAwBA,MAAOC,EAA/B,EAA+BA,QAA/B,OACtB,wBACIC,SAAqB,aAAXnF,EACVmE,QAASe,EACT7E,KAAK,SACLqC,UAAS,kBAAaqC,EAAb,yCACTE,MAAOA,EALX,SAMI,sBAAMvC,UAAS,iBAAYsC,WCwC7B7B,G,MAAqB,CAAEiC,OR3Cd,SAAC9D,EAAaH,GAAd,MAA4B,CAAEd,KAAM,YAAaiB,cAAaH,aQ2CxCkE,WRzClB,SAAA7D,GAAU,MAAK,CAAEnB,KAAM,YAAamB,iBSTxC8D,EDoDAhC,aAJS,SAAC,GAAD,MAAiB,CAAEtD,OAAnB,EAAGA,UAIamD,EAAzBG,EAhDO,SAAC,GAA0C,IAAxC8B,EAAuC,EAAvCA,OAAQC,EAA+B,EAA/BA,WAAYlG,EAAmB,EAAnBA,KAAMa,EAAa,EAAbA,OACvCT,EAA8CJ,EAA9CI,UAAWC,EAAmCL,EAAnCK,SAAUC,EAAyBN,EAAzBM,UAAWE,EAAcR,EAAdQ,GAAIP,EAAUD,EAAVC,MAEtCmG,EAASf,iBAAO,MACtBC,qBAAU,WACFjF,GACA+F,EAAOb,QAAQC,UAEpB,CAACnF,IAGJ,IAAIgG,EAAqB,oCAczB,OAZIjG,IACAiG,GAAsB,cAGtB/F,IACA+F,GAAsB,cAGX,aAAXxF,IACAwF,GAAsB,cAItB,uBACIL,SAAqB,aAAXnF,EACV4E,IAAKW,EACLE,OAAQ,kBAAMJ,EAAW1F,IACzB+F,UAAW,SAAClC,GACU,UAAdA,EAAMmC,KACNN,EAAW1F,IAGnB4D,SAAU,SAACC,GAAD,OAAW4B,EAAO5B,EAAMC,OAAOrE,MAAOO,IAChD+C,UAAW8C,EACXpG,MAAOA,EACPiB,KAAK,OACLuF,UAAWpG,OEtBjB2D,EAAqB,CAAE0C,gBVlBL,SAAAnF,GAAW,MAAK,CAAEL,KAAM,oBAAqBK,gBUkBvBoF,eVhBvB,SAAA/E,GAAU,MAAK,CAAEV,KAAM,mBAAoBU,eUgBJgF,SVV7C,SAAA/D,GAAS,MAAK,CAAE3B,KAAM,cAAe2B,cUUkBgE,mBVR7C,SAAApE,GAAW,MAAK,CAAEvB,KAAM,iBAAkBuB,iBWbtDqE,EDuBA3C,YAAQ,KAAMH,EAAdG,EAlBM,SAAC,GAA6E,IAA3EnE,EAA0E,EAA1EA,KAAM0G,EAAoE,EAApEA,gBAAiBE,EAAmD,EAAnDA,SAAUC,EAAyC,EAAzCA,mBAAoBF,EAAqB,EAArBA,eACjEnG,EAAOR,EAAPQ,GAER,OACI,sBAAK+C,UAAU,8BAAf,UACI,cAAC,EAAD,CAAmBqC,MAAM,kBAAkBC,KAAK,QAAQC,MAAM,WAAWC,QAAS,kBAAMW,EAAgBlG,MACxG,cAAC,EAAD,CAAeR,KAAMA,IACrB,sBAAKuD,UAAU,8BAA8BwD,KAAK,QAAlD,UACI,cAAC,EAAD,CAAmBnB,MAAM,SAASC,KAAK,QAAQC,MAAM,SAASC,QAAS,kBAAMa,EAASpG,MACtF,cAAC,EAAD,CAAmBoF,MAAM,UAAUC,KAAK,OAAOC,MAAM,aAAaC,QAAS,kBAAMc,EAAmBrG,MACpG,cAAC,EAAD,CAAmBoF,MAAM,UAAUC,KAAK,OAAOC,MAAM,OAAOC,QAAS,kBAAMY,EAAenG,eEUpGwD,G,MAAqB,CAAEgD,gBZRL,SAAAzG,GAAQ,MAAK,CAAEW,KAAM,iBAAkBX,aYQjB0G,kBZNpB,SAAA1G,GAAQ,MAAK,CAAEW,KAAM,mBAAoBX,eanBpD2G,ED2BA/C,aAJS,SAAC,GAAD,MAAmB,CAAE5D,SAArB,EAAGA,YAIayD,EAAzBG,EAvBa,SAAC,GAAD,IAAG5D,EAAH,EAAGA,SAAUyG,EAAb,EAAaA,gBAAiBC,EAA9B,EAA8BA,kBAA9B,OACxB,sBAAK1D,UAAU,gCAAgCwD,KAAK,QAApD,UACI,yBACI/B,QAAS,kBAAMgC,EAAgBzG,IAC/BW,KAAK,SACLqC,UAAU,qDAHd,sBAKA,sBAAMA,UAAU,0BAEhB,yBACIyB,QAAS,kBAAMiC,EAAkB1G,IACjCW,KAAK,SACLqC,UAAU,sDAHd,wBAKA,sBAAMA,UAAU,8BElBT4D,G,MC6BAhD,aAPS,SAAC,GAAgC,IAA9BnE,EAA6B,EAA7BA,KAAMa,EAAuB,EAAvBA,OAAQN,EAAe,EAAfA,SAGrC,MAAO,CAAEP,KAFmB,aAAXa,EAAwBN,EAAWP,EAAKa,QAAO,SAAAS,GAAI,OAAIA,EAAKT,MAEpDA,YAIdsD,EAxBE,SAAC,GAAsB,IAApBnE,EAAmB,EAAnBA,KAAMa,EAAa,EAAbA,OACtB,OAAoB,IAAhBb,EAAK+E,OAED,qBAAKxB,UAAU,uBAAf,SACI,oBAAGA,UAAU,oBAAb,yBAAyD,QAAX1C,EAAmB,GAAKA,EAAtE,kBAMR,sBAAK0C,UAAU,uBAAf,UACKvD,EAAKD,KAAI,SAAAuB,GAAI,OAAI,cAAC,EAAD,CAA4BtB,KAAMsB,GAAfA,EAAKd,OAC9B,aAAXK,GAAyB,cAAC,EAAD,WCjBvBuG,ECuCAjD,aAFS,SAAC,GAAD,MAAqB,CAAErD,WAAvB,EAAGA,cAEZqD,EAlCH,SAAC,GAAoB,IAAlBrD,EAAiB,EAAjBA,WAYX,OAVAwE,qBAAU,WACa,SAAfxE,GACAuG,SAASC,KAAKC,UAAUC,OAAO,SAC/BH,SAASC,KAAKC,UAAUE,IAAI,UAE5BJ,SAASC,KAAKC,UAAUC,OAAO,QAC/BH,SAASC,KAAKC,UAAUE,IAAI,YAEjC,CAAC3G,IAGA,sBAAKyC,UAAU,OAAf,UACI,wBAAQA,UAAU,qCAAlB,SACI,4CAEJ,sBAAMA,UAAU,uBAAhB,SACI,sBAAKA,UAAU,MAAf,UACI,qBAAKA,UAAU,yBAAf,SACI,cAAC,EAAD,MAEJ,sBAAKA,UAAU,yBAAf,UACI,cAAC,EAAD,IACA,cAAC,EAAD,kBCtBxBmE,IAASC,OACP,cAAC,IAAD,CAAUzE,MAAOA,EAAjB,SACE,cAAC,EAAD,UACE,cAAC,EAAD,QAGJmE,SAASO,eAAe,W","file":"static/js/main.4eb00f84.chunk.js","sourcesContent":["import uuid from 'react-uuid';\r\n\r\nconst initialTodos = ['Learn React', 'Create apps', 'Drink coffee'];\r\n\r\nconst createInitialTodos = (todos) => {\r\n    return todos.map(todo => {\r\n        return {\r\n            value: todo,\r\n            all: true,\r\n            active: true,\r\n            completed: false,\r\n            editable: false,\r\n            favourite: false,\r\n            archieve: false,\r\n            id: uuid()\r\n        }\r\n    })\r\n}\r\n\r\nconst initialState = {\r\n    todoText: '',\r\n    isValid: true,\r\n    todo: [...createInitialTodos(initialTodos)],\r\n    filter: 'all',\r\n    archieve: [],\r\n    colorTheme: 'light'\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'CREATE_TODO':\r\n            const todoText = action.todoText;\r\n            return { ...state, todoText, isValid: true }\r\n\r\n        case 'ADD_TODO':\r\n            const newTodo = createInitialTodos([action.todoText]);\r\n\r\n            if (!action.todoText) {\r\n                return { ...state, isValid: false }\r\n            }\r\n\r\n            return { ...state, isValid: true, todoText: '', todo: [...state.todo, ...newTodo], filter: 'all' }\r\n\r\n        case 'MARK_AS_COMPLETED':\r\n            const completedTodoIndex = state.todo.findIndex(item => item.id === action.completedId);\r\n            const completedTodoElem = state.todo[completedTodoIndex];\r\n            const completedTodo = {\r\n                ...completedTodoElem,\r\n                active: !completedTodoElem.active,\r\n                editable: false,\r\n                completed: !completedTodoElem.completed\r\n            };\r\n\r\n            return {\r\n                ...state,\r\n                todo: [...state.todo.slice(0, completedTodoIndex), completedTodo, ...state.todo.slice(completedTodoIndex + 1)]\r\n            }\r\n\r\n        case 'MARK_AS_EDITABLE':\r\n            const editableTodoIndex = state.todo.findIndex(item => item.id === action.editableId);\r\n            const editableTodoElem = state.todo[editableTodoIndex];\r\n            const newEditableTodo = {...editableTodoElem, editable: !editableTodoElem.editable};\r\n\r\n            return {\r\n                ...state,\r\n                todo: [...state.todo.slice(0, editableTodoIndex), newEditableTodo, ...state.todo.slice(editableTodoIndex + 1)]\r\n            }\r\n\r\n        case 'EDIT_TODO':\r\n            const editedTodoIndex = state.todo.findIndex(item => item.id === action.editedId);\r\n            const editedTodoElem = state.todo[editedTodoIndex];\r\n            const editedTodo = {...editedTodoElem, value: action.editedValue};\r\n\r\n            return {\r\n                ...state,\r\n                todo: [...state.todo.slice(0, editedTodoIndex), editedTodo, ...state.todo.slice(editedTodoIndex + 1)]\r\n            }\r\n\r\n        case 'EDIT_DONE':\r\n            const editDoneIndex = state.todo.findIndex(item => item.id === action.editDoneId);\r\n            const editDoneElem = state.todo[editDoneIndex];\r\n            const editDoneTodo = {...editDoneElem, editable: false};\r\n\r\n            return {\r\n                ...state,\r\n                todo: [...state.todo.slice(0, editDoneIndex), editDoneTodo, ...state.todo.slice(editDoneIndex + 1)]\r\n            }\r\n\r\n        case 'FAVOURITE_TODO':\r\n            const favouriteTodoIndex = state.todo.findIndex(item => item.id === action.favouriteId);\r\n            const favouriteTodoElem = state.todo[favouriteTodoIndex];\r\n            const favouriteTodo = {...favouriteTodoElem, favourite: !favouriteTodoElem.favourite};\r\n\r\n            return {\r\n                ...state,\r\n                todo: [...state.todo.slice(0, favouriteTodoIndex), favouriteTodo, ...state.todo.slice(favouriteTodoIndex + 1)]\r\n            }\r\n\r\n        case 'DELETE_TODO':\r\n            const deletedIndex = state.todo.findIndex(item => item.id === action.deletedId);\r\n            const deletedElem = state.todo[deletedIndex];\r\n            const newDeletedElem = {...deletedElem, active: false, archieve: true};\r\n\r\n            return {\r\n                ...state,\r\n                archieve: [...state.archieve, newDeletedElem],\r\n                todo: [\r\n                    ...state.todo.slice(0, deletedIndex),\r\n                    ...state.todo.slice(deletedIndex + 1)\r\n                ]\r\n            }\r\n\r\n        case 'FILTER_TODOS':\r\n            const filter = action.filter;\r\n\r\n            return { ...state, filter }\r\n\r\n        case 'CLEAN_ARCHIEVE':\r\n            return { ...state, archieve: [] }\r\n\r\n        case 'RESTORE_ARCHIEVE':\r\n            const archieve = action.archieve;\r\n            const restoreConfig = archieve.map(item => ({ ...item, active: true, archieve: false }));\r\n\r\n            return { ...state, todo: [...state.todo, ...restoreConfig], filter: 'all', archieve: [] }\r\n\r\n        case 'COLOR_THEME':\r\n            const isChecked = action.isChecked;\r\n\r\n            if (isChecked) {\r\n                return {\r\n                    ...state,\r\n                    colorTheme: 'dark'\r\n                }\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                colorTheme: 'light'\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default reducer;","import { createStore } from 'redux';\r\nimport reducer from './reducer';\r\n\r\nconst store = createStore(\r\n    reducer, \r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n\r\nexport default store;","import Error from './Error';\r\nexport default Error;","import React from 'react';\r\n\r\nconst Error = () => (\r\n    <div className=\"error\">Something goes wrong</div>\r\n)\r\n\r\nexport default Error;","import ErrorBoundry from './ErrorBoundry';\r\nexport default ErrorBoundry;","import React from 'react';\r\nimport Error from '../Error';\r\n\r\nexport default class ErrorBoundry extends React.Component {\r\n    state = {\r\n        error: false\r\n    }\r\n\r\n    componentDidCatch() {\r\n        this.setState({error: true})\r\n    }\r\n\r\n    render() {\r\n        if (this.state.error) {\r\n            return <Error/>\r\n        }\r\n\r\n        return this.props.children\r\n    }\r\n}","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {toggleColorScheme} from '../../redux/actions';\r\nimport './TodoColorTheme.scss'\r\n\r\nconst TodoColorTheme = ({toggleColorScheme}) => (\r\n    <div className=\"form-check form-switch todo-color-theme\">\r\n        <input onChange={(event) => toggleColorScheme(event.target.checked)} className=\"form-check-input todo-color-theme__check\" type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\r\n    </div>\r\n)\r\n\r\nconst mapDispatchToProps = {\r\n    toggleColorScheme\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(TodoColorTheme);","const createTodo = todoText => ({ type: 'CREATE_TODO', todoText });\r\n\r\nconst addTodo = todoText => ({ type: 'ADD_TODO', todoText });\r\n\r\nconst markAsCompleted = completedId => ({ type: 'MARK_AS_COMPLETED', completedId });\r\n\r\nconst markAsEditable = editableId => ({ type: 'MARK_AS_EDITABLE', editableId });\r\n\r\nconst onEdit = (editedValue, editedId) => ({ type: 'EDIT_TODO', editedValue, editedId });\r\n\r\nconst onEditDone = editDoneId => ({ type: 'EDIT_DONE', editDoneId });\r\n\r\nconst onDelete = deletedId => ({ type: 'DELETE_TODO', deletedId });\r\n\r\nconst onToggleFavourites = favouriteId => ({ type: 'FAVOURITE_TODO', favouriteId });\r\n\r\nconst onFilterTodos = filter => ({ type: 'FILTER_TODOS', filter });\r\n\r\nconst onCleanArchieve = archieve => ({ type: 'CLEAN_ARCHIEVE', archieve });\r\n\r\nconst onRestoreArchieve = archieve => ({ type: 'RESTORE_ARCHIEVE', archieve });\r\n\r\nconst toggleColorScheme = isChecked => ({ type: 'COLOR_THEME', isChecked });\r\n\r\nexport {\r\n    createTodo,\r\n    addTodo,\r\n    markAsCompleted,\r\n    markAsEditable,\r\n    onEdit,\r\n    onEditDone,\r\n    onDelete,\r\n    onToggleFavourites,\r\n    onFilterTodos,\r\n    onCleanArchieve,\r\n    onRestoreArchieve,\r\n    toggleColorScheme\r\n};","import TodoColorTheme from './TodoColorTheme';\r\nexport default TodoColorTheme;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { onFilterTodos } from '../../redux/actions';\r\nimport TodoColorTheme from '../TodoColorTheme';\r\n\r\nconst TodoFilters = ({ onFilterTodos, todo, filter, archieve }) => {\r\n    const todoFilters = ['all', 'active', 'completed', 'favourite', 'archieve'];\r\n\r\n    return (\r\n        <>\r\n            <h2 className=\"todo-filters__headline text-center\">Filters</h2>\r\n            <div className=\"list-group mb-3\">\r\n                {todoFilters.map((todoFilter, index) => {\r\n                    const mainFilter = todo.filter(item => item[todoFilter]);\r\n                    const isActive = todoFilter === filter ? 'active' : '';\r\n                    const counter = todoFilter === 'archieve' ? archieve.length : mainFilter.length;\r\n                    \r\n                    return (\r\n                        <button\r\n                            key={index}\r\n                            type=\"button\"\r\n                            onClick={() => onFilterTodos(todoFilter)}\r\n                            className={`list-group-item list-group-item-action d-flex justify-content-between text-capitalize ${isActive}`}>\r\n                            {todoFilter}\r\n                            <span className=\"badge bg-dark rounded-pill\">{counter}</span>\r\n                        </button>\r\n                    )\r\n                })}\r\n            </div>\r\n            <TodoColorTheme/>\r\n        </>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = ({ todo, filter, archieve }) => ({ todo, filter, archieve });\r\n\r\nconst mapDispatchToProps = { onFilterTodos }\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoFilters);","import TodoFilters from './TodoFilters';\r\nexport default TodoFilters;","import React, { useEffect, useRef } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { createTodo, addTodo } from '../../redux/actions';\r\nimport './NewTodo.scss';\r\n\r\nconst NewTodo = ({ todoText, createTodo, addTodo, isValid }) => {\r\n\r\n    const todoInput = useRef(null);\r\n\r\n    useEffect(() => todoInput.current.focus(), [todoText]);\r\n\r\n    return (\r\n        <div className=\"input-group mb-3\">\r\n            <input\r\n                ref={todoInput}\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                placeholder=\"What needs to be done?\"\r\n                value={todoText}\r\n                onChange={(event) => createTodo(event.target.value)}\r\n            />\r\n            <button\r\n                className=\"btn btn-info text-white\"\r\n                type=\"button\"\r\n                onClick={() => addTodo(todoText)}>\r\n                Add task\r\n            </button>\r\n            <div className={isValid ? 'todo-validation' : 'todo-validation show'}>Input is empty!</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = ({ todoText, isValid }) => ({ todoText, isValid });\r\n\r\nconst mapDispatchToProps = { createTodo, addTodo }\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NewTodo);","import NewTodo from './NewTodo';\r\nexport default NewTodo;","import TodoActionButtons from './TodoActionButtons';\r\nexport default TodoActionButtons;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport './TodoActionButtons.scss';\r\n\r\nconst TodoActionButtons = ({ filter, color, icon, title, handler }) => (\r\n    <button\r\n        disabled={filter === 'archieve'}\r\n        onClick={handler}\r\n        type=\"button\"\r\n        className={`btn btn-${color} todo-action-button align-self-center`}\r\n        title={title}>\r\n        <span className={`fas fa-${icon}`}></span>\r\n    </button>\r\n)\r\n\r\nconst mapStateToProps = ({ filter }) => ({ filter });\r\n\r\nexport default connect(mapStateToProps)(TodoActionButtons);","import React, { useEffect, useRef } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { onEdit, onEditDone } from '../../redux/actions';\r\nimport './TodoListField.scss';\r\n\r\nconst TodoListField = ({ onEdit, onEditDone, todo, filter }) => {\r\n    const { completed, editable, favourite, id, value } = todo;\r\n\r\n    const newRef = useRef(null);\r\n    useEffect(() => {\r\n        if (editable) {\r\n            newRef.current.focus()\r\n        }\r\n    }, [editable]);\r\n\r\n    \r\n    let completedTodoClass = 'form-control todo-list-field mx-2';\r\n\r\n    if (completed) {\r\n        completedTodoClass += ' completed'\r\n    }\r\n\r\n    if (favourite) {\r\n        completedTodoClass += ' favourite'\r\n    }\r\n\r\n    if (filter === 'archieve') {\r\n        completedTodoClass += ' archieved'\r\n    }\r\n\r\n    return (\r\n        <input\r\n            disabled={filter === 'archieve'}\r\n            ref={newRef}\r\n            onBlur={() => onEditDone(id)}\r\n            onKeyDown={(event) => {\r\n                if (event.key === 'Enter') {\r\n                    onEditDone(id)\r\n                }\r\n            }}\r\n            onChange={(event) => onEdit(event.target.value, id)}\r\n            className={completedTodoClass}\r\n            value={value}\r\n            type=\"text\"\r\n            readOnly={!editable}\r\n        />\r\n    )\r\n}\r\n\r\nconst mapStateToProps = ({ filter }) => ({ filter });\r\n\r\nconst mapDispatchToProps = { onEdit, onEditDone }\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoListField)","import TodoListField from './TodoListField';\r\nexport default TodoListField;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport TodoActionButtons from '../TodoActionButtons';\r\nimport TodoListField from '../TodoListField';\r\nimport { markAsCompleted, markAsEditable, onDelete, onToggleFavourites } from '../../redux/actions';\r\n\r\nconst TodoListItem = ({ todo, markAsCompleted, onDelete, onToggleFavourites, markAsEditable }) => {\r\n    const { id } = todo;\r\n\r\n    return (\r\n        <div className=\"todo-list__item d-flex mb-3\">\r\n            <TodoActionButtons color=\"outline-success\" icon=\"check\" title=\"complete\" handler={() => markAsCompleted(id)} />\r\n            <TodoListField todo={todo} />\r\n            <div className=\"btn-group align-self-center\" role=\"group\">\r\n                <TodoActionButtons color=\"danger\" icon=\"trash\" title=\"delete\" handler={() => onDelete(id)} />\r\n                <TodoActionButtons color=\"warning\" icon=\"star\" title=\"favourites\" handler={() => onToggleFavourites(id)} />\r\n                <TodoActionButtons color=\"primary\" icon=\"edit\" title=\"edit\" handler={() => markAsEditable(id)} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = { markAsCompleted, markAsEditable, onDelete, onToggleFavourites }\r\n\r\nexport default connect(null, mapDispatchToProps)(TodoListItem);","import TodoListItem from './TodoListItem';\r\nexport default TodoListItem;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { onCleanArchieve, onRestoreArchieve } from '../../redux/actions';\r\nimport './TodoArchieveButton.scss';\r\n\r\nconst TodoArchieveButtons = ({ archieve, onCleanArchieve, onRestoreArchieve }) => (\r\n    <div className=\"btn-group align-self-end mt-5\" role=\"group\">\r\n        <button\r\n            onClick={() => onCleanArchieve(archieve)}\r\n            type=\"button\"\r\n            className=\"btn btn-danger todo-list__btn todo-archieve-button\">\r\n            Clean All\r\n        <span className=\"fas fa-thumbs-down\"></span>\r\n        </button>\r\n        <button\r\n            onClick={() => onRestoreArchieve(archieve)}\r\n            type=\"button\"\r\n            className=\"btn btn-success todo-list__btn todo-archieve-button\">\r\n            Restore All\r\n        <span className=\"fas fa-thumbs-up\"></span>\r\n        </button>\r\n    </div>\r\n)\r\n\r\nconst mapStateToProps = ({ archieve }) => ({ archieve });\r\n\r\nconst mapDispatchToProps = { onCleanArchieve, onRestoreArchieve }\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TodoArchieveButtons);","import TodoArchieveButtons from './TodoArchieveButtons';\r\nexport default TodoArchieveButtons;","import TodoList from './TodoList';\r\nexport default TodoList;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport TodoListItem from '../TodoListItem';\r\nimport TodoArchieveButtons from '../TodoArchieveButtons';\r\nimport './TodoList.scss';\r\n\r\nconst TodoList = ({ todo, filter }) => {\r\n    if (todo.length === 0) {\r\n        return (\r\n            <div className=\"list-group todo-list\">\r\n                <p className=\"todo-list__failed\">You have no {filter === 'all' ? '' : filter} Todos yet</p>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"list-group todo-list\">\r\n            {todo.map(item => <TodoListItem key={item.id} todo={item} />)}\r\n            {filter === 'archieve' && <TodoArchieveButtons />}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = ({ todo, filter, archieve }) => {\r\n    const todoList = filter === 'archieve' ? archieve : todo.filter(item => item[filter]);\r\n\r\n    return { todo: todoList, filter }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps)(TodoList);","import App from './App';\r\nexport default App;","import React, { useEffect } from 'react';\r\nimport TodoFilters from '../TodoFilters';\r\nimport NewTodo from '../NewTodo';\r\nimport TodoList from '../TodoList';\r\nimport { connect } from 'react-redux';\r\n\r\nconst App = ({ colorTheme }) => {\r\n\r\n    useEffect(() => {\r\n        if (colorTheme === 'dark') {\r\n            document.body.classList.remove('light');\r\n            document.body.classList.add('dark')\r\n        } else {\r\n            document.body.classList.remove('dark');\r\n            document.body.classList.add('light')\r\n        }\r\n    }, [colorTheme])\r\n\r\n    return (\r\n        <div className=\"todo\">\r\n            <header className=\"todo__header text-center py-3 mb-5\">\r\n                <h1>Todo App</h1>\r\n            </header>\r\n            <main className=\"todo__main container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-lg-3 todo__filters\">\r\n                        <TodoFilters />\r\n                    </div>\r\n                    <div className=\"col-lg-9 todo__content\">\r\n                        <NewTodo />\r\n                        <TodoList />\r\n                    </div>\r\n                </div>\r\n            </main>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = ({ colorTheme }) => ({ colorTheme });\r\n\r\nexport default connect(mapStateToProps)(App);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport './index.css';\nimport ErrorBoundry from './components/ErrorBoundry';\nimport App from './components/App';\n\nReactDOM.render(\n  <Provider store={store}>\n    <ErrorBoundry>\n      <App />\n    </ErrorBoundry>\n  </Provider>,\n  document.getElementById('root')\n);"],"sourceRoot":""}